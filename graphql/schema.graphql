
"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "Unique username ."
     username: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

# Define the LabTest type
type LabTest {
  id: ID!
  name: String!
  created_at: DateTime
  updated_at: DateTime
}


# Queries
type Query {
  labTests: [LabTest!]! @paginate @middleware(checks: ["auth:sanctum"])
}

# Mutations
type Mutation {
  submitMedicalData(username: String!, data: [String!]!): String! @middleware(checks: ["auth:sanctum"]) @field(resolver: "App\\GraphQL\\Mutations\\MedicalData@submit")
  login(email: String!, password: String!): String! @field(resolver: "App\\GraphQL\\Mutations\\Auth@login")
  register(name: String!, username: String!, email: String!, password: String!): String! @field(resolver: "App\\GraphQL\\Mutations\\Auth@register")
  logout: String! @middleware(checks: ["auth:sanctum"]) @field(resolver: "App\\GraphQL\\Mutations\\Auth@logout")
}
